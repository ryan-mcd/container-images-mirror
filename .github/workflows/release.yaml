name: Release

on:
  workflow_dispatch:
  push:
    branches:
    - main
    paths:
    - 'apps/**'

jobs:
  changes:
    name: Get changes
    runs-on: ubuntu-22.04
    # runs-on: ubuntu-latest
    outputs:
      matrix: "{\"container\": ${{ steps.reduce.outputs.containers }} }"
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        list-files: json
        filters: |
          changed:
          - 'apps/**'
    - run: echo '${{ toJson(steps.filter.outputs) }}' > changes.json
    - id: reduce
      run: |
        CONTAINERS=$(jq --raw-output '.changed_files | fromjson | .[] |= sub("(?<filepath>(?<first_directory>(?<root1>[/]?)[^/]+/)(?<second_directory>(?<root2>[/]?)[^/]+)(?<extra_paths>.+))"; "\(.second_directory)") | unique' changes.json)
        echo ::set-output name=containers::${CONTAINERS}

  build:
    name: Build
    runs-on: ubuntu-22.04
    # runs-on: ubuntu-latest
    needs:
    - changes
    strategy:
      matrix: ${{ fromJson(needs.changes.outputs.matrix) }}
      fail-fast: false
    if: "!contains(github.event.head_commit.message, '[ci-skip]')"
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Prepare
      id: prep
      env:
        OWNER: '${{ github.repository_owner }}'
      run: |
        CATEGORY="apps"
        echo ::set-output name=category::${CATEGORY}
        VERSION=$(head -1 ./${CATEGORY}/${{ matrix.container }}/Dockerfile | sed 's/^FROM.*://' )
        VERSION="${VERSION#*v}"
        echo ::set-output name=version::${VERSION}
        PLATFORM=$(cat ./${CATEGORY}/${{ matrix.container }}/PLATFORM)
        echo ::set-output name=platform::${PLATFORM}
        echo ::set-output name=push::true
        # echo "OWNER_LC=${OWNER,,}" >>${GITHUB_ENV}
        OWNER_LC=${OWNER,,}
        echo ::set-output name=owner_lc::${OWNER_LC}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
      with:
        platforms: amd64,arm64

    - name: Login to GHCR
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
      with:
        install: true
        version: latest
        driver-opts: image=moby/buildkit:latest

    - name: Build and Push
      uses: docker/build-push-action@v6
      with:
        build-args: VERSION=${{ steps.prep.outputs.version }}
        context: .
        platforms: ${{ steps.prep.outputs.platform }}
        file: ./${{ steps.prep.outputs.category }}/${{ matrix.container }}/Dockerfile
        push: ${{ steps.prep.outputs.push }}
        tags: |
          ghcr.io/${{ steps.prep.outputs.owner_lc }}/${{ matrix.container }}:${{ steps.prep.outputs.version }}
          ghcr.io/${{ steps.prep.outputs.owner_lc }}/${{ matrix.container }}:v${{ steps.prep.outputs.version }}
